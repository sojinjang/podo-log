{"version":3,"file":"static/js/729.898cd59a.chunk.js","mappings":"4RAoFA,UA/DqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GADSC,EAAAA,EAAAA,MACOD,OACtB,GAA0CE,EAAAA,EAAAA,IAAeC,EAAAA,GAAkB,eAApEC,EAAa,KAAEC,EAAgB,KACtC,GAA4CC,EAAAA,EAAAA,WAAS,GAAM,eAApDC,EAAc,KAAEC,EAAiB,KACxC,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CG,EAAS,KAAEC,EAAY,KAC9B,GAAkDJ,EAAAA,EAAAA,UAAS,IAAG,eAAvDK,EAAiB,KAAEC,EAAoB,KAC9C,GAAmCC,EAAAA,EAAAA,IAAuB,CACxDC,cAAe,CAAEC,SAAUjB,EAASkB,MAAMC,QADpCC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAMZC,EAAc,yCAAG,0FAAiB,GAARL,EAAQ,EAARA,SAAQ,SAE/BN,EAAU,CAAD,gEACRY,EAAAA,EAAAA,MAAUC,EAAAA,EAAAA,MAAa,WAAOtB,GAAU,CAAEuB,MAAOnB,EAAeW,SAAAA,IAAY,KAAD,EACjFnB,EAAS4B,EAAAA,GAAAA,MAAAA,MAA0B,gDAE/B,gBAAeC,OAAOC,MAAM,KAAIC,SAAS,yDAEhD,gBARmB,sCAsBpB,OAZAC,EAAAA,EAAAA,YAAU,WACRvB,EAAiBP,EAASkB,MAAMO,MAClC,GAAG,KAEHK,EAAAA,EAAAA,YAAU,WACRlB,EAAaN,IAAkBN,EAASkB,MAAMO,OAAShB,EACzD,GAAG,CAACH,EAAeG,KAEnBqB,EAAAA,EAAAA,YAAU,WACRhB,EAAqBH,EAAY,GAAK,qBACxC,GAAG,CAACA,KAGF,UAAC,KAAoB,YACnB,SAAC,KAAU,KACX,SAAC,KAAS,CAACoB,MAAM,qCACjB,SAAC,IAAM,CAACC,SAAU,KAAK,UACrB,kBAAMC,SAAUZ,EAAaC,GAAgB,WAC3C,SAAC,KAAQ,KACT,SAAC,KAAc,UAAC,4CAChB,SAAC,KAAoB,KACrB,SAAC,KAAc,UAAC,qCAChB,SAAC,KAAuB,CACtBF,SAAUA,EAAS,YACnBc,gBAAiBlC,EAASkB,MAAMC,KAAKgB,OACrCC,sBAtCoB,SAACC,GAC7B3B,EAAkB2B,IAAiBrC,EAASkB,MAAMC,KACpD,KAsCQ,SAAC,KAAY,CACXmB,YAAY,2BACZC,aAAa,WACbC,YAAW,kBAAa3B,YAMpC,C","sources":["pages/BookRevision.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Bounce from \"react-reveal/Bounce\";\n\nimport { selectedColorAtom } from \"src/recoil/book-color\";\nimport { api } from \"src/utils/axiosApi/api\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport { PRIVATE_ROUTE } from \"src/router/ROUTE_INFO\";\n\nimport { BookNameInput } from \"src/@types/input\";\nimport { PinkPurpleBackground } from \"src/styles/Common\";\nimport { BackButton, PageTitle, PurpleButton } from \"src/components/common\";\nimport {\n  ContainerTitle,\n  BookIcon,\n  ColorSelectContainer,\n  BookTitleInputContainer,\n} from \"src/components/common/book\";\n\nconst BookRevision = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const params = useParams();\n  const bookId = params.bookId;\n  const [selectedColor, setSelectedColor] = useRecoilState(selectedColorAtom);\n  const [isTitleRevised, setIsTitleRevised] = useState(false);\n  const [isRevised, setIsRevised] = useState(false);\n  const [buttonCursorStyle, setButtonCursorStyle] = useState(\"\");\n  const { register, handleSubmit } = useForm<BookNameInput>({\n    defaultValues: { bookName: location.state.name },\n  });\n  const refreshIsTitleRevised = (currentTitle: string) => {\n    setIsTitleRevised(currentTitle !== location.state.name);\n  };\n  const reviseBookInfo = async ({ bookName }: BookNameInput) => {\n    try {\n      if (!isRevised) return;\n      await api.patch(API_URL.books + `/${bookId}`, { color: selectedColor, bookName });\n      navigate(PRIVATE_ROUTE.books.path);\n    } catch (err) {\n      if (err instanceof Error) alert(err.message);\n    }\n  };\n\n  useEffect(() => {\n    setSelectedColor(location.state.color);\n  }, []);\n\n  useEffect(() => {\n    setIsRevised(selectedColor !== location.state.color || isTitleRevised);\n  }, [selectedColor, isTitleRevised]);\n\n  useEffect(() => {\n    setButtonCursorStyle(isRevised ? \"\" : \"cursor-not-allowed\");\n  }, [isRevised]);\n\n  return (\n    <PinkPurpleBackground>\n      <BackButton />\n      <PageTitle title=\"일기장 수정\" />\n      <Bounce duration={1500}>\n        <form onSubmit={handleSubmit(reviseBookInfo)}>\n          <BookIcon />\n          <ContainerTitle>표지 색상 선택</ContainerTitle>\n          <ColorSelectContainer />\n          <ContainerTitle>일기장 제목</ContainerTitle>\n          <BookTitleInputContainer\n            register={register(\"bookName\")}\n            existingNameLen={location.state.name.length}\n            refreshIsTitleRevised={refreshIsTitleRevised}\n          />\n          <PurpleButton\n            description=\"수정하기\"\n            wrapperStyle=\"mt-[5vh]\"\n            buttonStyle={`sm:w-40 ${buttonCursorStyle}`}\n          />\n        </form>\n      </Bounce>\n    </PinkPurpleBackground>\n  );\n};\n\nexport default BookRevision;\n"],"names":["navigate","useNavigate","location","useLocation","bookId","useParams","useRecoilState","selectedColorAtom","selectedColor","setSelectedColor","useState","isTitleRevised","setIsTitleRevised","isRevised","setIsRevised","buttonCursorStyle","setButtonCursorStyle","useForm","defaultValues","bookName","state","name","register","handleSubmit","reviseBookInfo","api","API_URL","color","PRIVATE_ROUTE","Error","alert","message","useEffect","title","duration","onSubmit","existingNameLen","length","refreshIsTitleRevised","currentTitle","description","wrapperStyle","buttonStyle"],"sourceRoot":""}