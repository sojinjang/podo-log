{"version":3,"file":"static/js/255.1590015d.chunk.js","mappings":"wQAIaA,GAAuBC,EAAAA,EAAAA,IAAU,CAC5CC,IAAK,uBACLC,QAAS,K,2DC2CX,EAvCoB,SAAH,GAKQ,IAJvBC,EAAQ,EAARA,SACAC,EAAM,EAANA,OACAC,EAAW,EAAXA,YACAC,EAAgB,EAAhBA,iBAEMC,EAAqB,iBAAbJ,EAAoB,KAAOA,EAEzC,OACE,8BACGI,GACC,iBAAKC,UAAU,yBAAwB,UACpCD,IAAS,SAAC,KAAa,CAACE,IAAI,UAAUC,IAAKH,KAC5C,SAAC,KAAc,CACbI,QAAS,WACPL,GACF,EACAI,IAAKE,QAIT,UAAC,KAAoB,CAACD,QAAS,wBAAY,OAANP,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQS,eAAO,WAAT,EAAN,EAAiBC,OAAO,EAAC,WAC5D,SAAC,KAAe,CAACL,IAAI,SAASC,IAAKK,KACnC,kBACEP,UAAU,SACVQ,KAAK,OACLC,OAAO,oEACPC,SAAU,WACRb,IACAC,GACF,EACAa,IAAKf,QAMjB,ECVA,EAzBe,SAAH,GAAmF,IAA7EgB,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAAYC,EAAa,EAAbA,cAAejB,EAAW,EAAXA,YAAaD,EAAM,EAANA,OAClE,OACE,8BACGgB,GACC,iBAAKZ,UAAU,yBAAwB,WACrC,SAAC,KAAa,CAACE,IAAKW,GAA0BN,KAC9C,SAAC,KAAc,CAACJ,QAASW,EAAeZ,IAAKE,QAG/C,UAAC,KAAoB,CAACD,QAAS,wBAAY,OAANP,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQS,eAAO,WAAT,EAAN,EAAiBC,OAAO,EAAC,WAC5D,SAAC,KAAe,CAACL,IAAI,SAASC,IAAKK,KACnC,kBACEP,UAAU,SACVQ,KAAK,OACLC,OAAO,oEACPM,GAAG,aACHL,SAAUb,EACVc,IAAKf,QAMjB,ECoCA,EAxD+B,SAAH,GAIH,IAHvBD,EAAQ,EAARA,SACAqB,EAAY,EAAZA,aACAlB,EAAgB,EAAhBA,iBAEMmB,EAAS,IAAIC,WACbtB,GAASuB,EAAAA,EAAAA,QAAyB,MACxC,GAAgCC,EAAAA,EAAAA,IAAe7B,GAAqB,eAA7DqB,EAAQ,KAAES,EAAW,KACtBC,GAAgBC,EAAAA,EAAAA,IAAoBhC,GAC1C,GAAoCiC,EAAAA,EAAAA,UAAsC,IAAG,eAAtEX,EAAU,KAAEY,EAAa,KAC1B5B,EAAW,yCAAG,gGACR,OAAND,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQS,eAAO,QAAf,EAAiBqB,MAAK,iBACW,GAA/BC,EAAO/B,EAAOS,QAAQqB,MAAM,KAC5BE,EAAAA,EAAAA,GAAWD,GAAM,CAAD,gCAAeE,EAAAA,EAAAA,GAAiBF,GAAM,KAAD,EAAnCA,EAAI,+BACEG,EAAAA,EAAAA,GAAYH,GAAM,KAAD,GAAvCI,EAAa,UACAJ,EAAOI,GAC1BV,EAAYM,GACZV,EAAOe,cAAcL,GACrBV,EAAOgB,UAAY,WACjBR,EAAcR,EAAOiB,OACvB,EAAE,4CAEL,kBAZgB,mCAwBjB,OANAC,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLb,GACF,CACF,GAAG,KAGD,8BACGN,GACC,SAAC,EAAM,CACLpB,OAAQA,EACRgB,SAAUA,EACVC,WAAYA,EACZC,cAlBc,WACI,kBAAbF,GAAuBwB,IAAIC,gBAAgBzB,GACtDS,EAAY,GACd,EAgBQxB,YAAaA,KAGf,SAAC,EAAW,CACVD,OAAQA,EACRD,SAAUA,EACVE,YAAaA,EACbC,iBAAkBA,KAK5B,E,8BCvDMwC,EAAiB,SAAC1B,GACtB,IAAM2B,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,UAAW7B,GAEpB2B,CACT,EAgEA,EA9D0B,WACxB,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,EAASC,OAAOH,EAAOE,QACvBE,EAAUD,OAAOH,EAAOI,SACxBpC,GAAWqC,EAAAA,EAAAA,IAAe1D,GAChC,GAAwCiC,EAAAA,EAAAA,WAAS,GAAM,eAAhDR,EAAY,KAAEkC,EAAe,KACpC,GAA4B1B,EAAAA,EAAAA,UAA8B,MAAK,eAAxD2B,EAAM,KAAEC,EAAS,KACxB,GAAmCC,EAAAA,EAAAA,IAAoB,CACrDC,cAAc,WAAD,8BAAE,mHACUC,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,UAAkBC,OAAOX,IAAQ,WAAOE,IAAW,KAAD,EAEjC,OAFiC,SAAzEU,EAAI,EAAJA,KAAI,EACwBA,EAAKA,KAAjCC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QACxBT,EAAU,CAAEO,MAAAA,EAAOC,QAASA,EAASC,QAAAA,IAAW,kBACzC,CAAEF,MAAAA,EAAOE,QAAAA,IAAS,2CAC1B,kDALa,KADRC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aASZC,EAAe,yCAAG,sFACL,KAAbpD,EAAe,gCAAe2C,EAAAA,EAAAA,OAAWC,EAAAA,EAAAA,SAAiBR,IAAU,KAAD,0DACjEiB,EAAAA,EAAAA,KAAaT,EAAAA,EAAAA,SAAiBR,GAAUV,EAAe1B,IAAW,KAAD,sCACxE,kBAHoB,mCAIfsD,EAAiB,yCAAG,4FAAuB,OAAdP,EAAK,EAALA,MAAOE,EAAO,EAAPA,QAAO,kBAEvCN,EAAAA,EAAAA,MAAUC,EAAAA,EAAAA,MAAa,WAAOR,GAAW,CAAEW,MAAAA,EAAOE,QAAAA,IAAW,KAAD,MAC9D7C,EAAa,CAAD,+BAAQgD,IAAkB,KAAD,EACzCtB,GAAU,GAAG,kDAET,gBAAeyB,OAAOC,MAAM,KAAIC,SAAS,0DAEhD,gBARsB,sCAUvB,OACE,UAAC,KAAW,CAACtD,GAAG,QAAQuD,SAAUP,EAAaG,GAAmB,WAChE,SAAC,MAAY,QACXlE,UAAS,UAAKuE,EAAAA,IACdC,YAAY,2DACZC,UAAW,EACXC,UAAW,GACXC,UAAQ,GACJb,EAAS,WAEdX,IACC,SAAC,EAAsB,CACrBxD,SAAUwD,EAAOS,QACjB5C,aAAcA,EACdlB,iBAAkB,WAChBoD,GAAgB,EAClB,KAGJ,SAAC,MAAc,QACblD,UAAS,UAAKuE,EAAAA,IACdC,YAAY,2DACZC,UAAW,EACXC,UAAW,IACXC,UAAQ,GACJb,EAAS,eAIrB,EC/EA,ICcA,EAXsB,WACpB,OACE,UAAC,KAAoB,YACnB,SAAC,KAAU,KACX,SAAC,KAAU,KACX,SAAC,KAAS,CAACH,MAAM,+BACjB,SAAC,EAAiB,MAGxB,C,kGCVaM,EAAUW,EAAAA,EAAAA,QAAa,UAAKC,EAAAA,EAAAA,WAEzCZ,EAAQa,aAAaC,SAAWF,EAAAA,EAAAA,aAAAA,SAEhCZ,EAAQa,aAAaE,QAAQC,KAC3B,SAACC,GAIC,OAHAA,EAAOC,QAAQ,gBAAkB,sBACjCD,EAAOC,QAAuB,cAAC,kBAAaC,EAAAA,EAAAA,OAC5CF,EAAOG,iBAAkB,EAClBH,CACT,IACA,SAACI,GACCC,QAAQC,OAAOF,EACjB,G,yFCfWxD,EAAW,yCAAG,WAAO2D,GAAW,8EAI1C,OAHKC,EAAU,CACdC,UAAW,EACXC,iBAAkB,KAClB,EAAD,iBAEoBC,EAAAA,EAAAA,GAAiBJ,EAAOC,GAAS,KAAD,EAAzC,OAAJI,EAAI,yBACH,IAAIC,KAAK,CAACD,GAAOA,EAAKE,OAAK,gCAE9B,gBAAe7B,OAAOC,MAAM,KAAIC,SAAS,yDAEhD,gBAXuB,qC,sGCFXzC,EAAa,SAACD,GACzB,MAAqB,eAAdA,EAAKnB,MAAuC,eAAdmB,EAAKnB,IAC5C,EAEaqB,EAAgB,yCAAG,WAAOF,GAAU,8FACxB,mCAAmB,KAAD,EAA3B,OAARsE,EAAQ,gBACQA,EAASvG,QAAQ,CAAEoG,KAAMnE,EAAMuE,OAAQ,eAAgB,KAAD,EAA/D,OAAPC,EAAO,yBAEN,IAAIJ,KAAK,CAACI,GAAsBxE,EAAKqE,KAAKI,MAAM,KAAK,GAAK,OAAQ,CACvE5F,KAAM,gBACN,2CACH,gBAP4B,qC","sources":["recoil/diary-revision/atom.ts","components/diary-revision/ExistingImg.tsx","components/diary-revision/NewImg.tsx","components/diary-revision/DiaryRevisionImgUpload.tsx","components/diary-revision/DiaryRevisionForm.tsx","components/diary-revision/index.tsx","pages/DiaryRevision.tsx","utils/axiosApi/formApi.ts","utils/compressImg.ts","utils/handleHEIC.ts"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport type Img = string | Blob;\n\nexport const diaryRevisionImgAtom = atom<Img>({\n  key: \"diaryRevisionImgAtom\",\n  default: \"\",\n});\n","import imgUploadIcon from \"../../assets/icons/image.png\";\nimport trashCanIcon from \"../../assets/icons/trash-can-white.png\";\nimport * as S from \"../../styles/Diary\";\n\ninterface ExistingImgProps {\n  imgRef: React.RefObject<HTMLInputElement>;\n  ogPicSrc: string;\n  saveImgFile: () => void;\n  handlePicChanged: () => void;\n}\nconst ExistingImg = ({\n  ogPicSrc,\n  imgRef,\n  saveImgFile,\n  handlePicChanged,\n}: ExistingImgProps) => {\n  const ogPic = ogPicSrc === \"없음\" ? null : ogPicSrc;\n\n  return (\n    <>\n      {ogPic ? (\n        <div className=\"relative overflow-auto\">\n          {ogPic && <S.UploadedImg alt=\"picture\" src={ogPic}></S.UploadedImg>}\n          <S.TrashCanIcon\n            onClick={() => {\n              handlePicChanged();\n            }}\n            src={trashCanIcon}\n          />\n        </div>\n      ) : (\n        <S.ImgUploadContainer onClick={() => imgRef?.current?.click()}>\n          <S.ImgUploadIcon alt=\"upload\" src={imgUploadIcon} />\n          <input\n            className=\"hidden\"\n            type=\"file\"\n            accept=\"image/bmp,image/jpeg, image/jpg, image/png, image/heic, image/gif\"\n            onChange={() => {\n              saveImgFile();\n              handlePicChanged();\n            }}\n            ref={imgRef}\n          />\n        </S.ImgUploadContainer>\n      )}\n    </>\n  );\n};\n\nexport default ExistingImg;\n","import imgUploadIcon from \"../../assets/icons/image.png\";\nimport trashCanIcon from \"../../assets/icons/trash-can-white.png\";\nimport * as S from \"../../styles/Diary\";\n\ninterface NewImgProps {\n  imgRef: React.RefObject<HTMLInputElement>;\n  diaryImg: string | Blob;\n  imgPreview: string | ArrayBuffer | null;\n  deleteImgFile: () => void;\n  saveImgFile: () => void;\n}\n\nconst NewImg = ({ diaryImg, imgPreview, deleteImgFile, saveImgFile, imgRef }: NewImgProps) => {\n  return (\n    <>\n      {diaryImg ? (\n        <div className=\"relative overflow-auto\">\n          <S.UploadedImg src={imgPreview ? imgPreview : imgUploadIcon} />\n          <S.TrashCanIcon onClick={deleteImgFile} src={trashCanIcon} />\n        </div>\n      ) : (\n        <S.ImgUploadContainer onClick={() => imgRef?.current?.click()}>\n          <S.ImgUploadIcon alt=\"upload\" src={imgUploadIcon} />\n          <input\n            className=\"hidden\"\n            type=\"file\"\n            accept=\"image/bmp,image/jpeg, image/jpg, image/png, image/heic, image/gif\"\n            id=\"profileImg\"\n            onChange={saveImgFile}\n            ref={imgRef}\n          />\n        </S.ImgUploadContainer>\n      )}\n    </>\n  );\n};\n\nexport default NewImg;\n","import { useRef, useState, useEffect } from \"react\";\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\n\nimport { diaryRevisionImgAtom } from \"src/recoil/diary-revision/atom\";\nimport { compressImg } from \"src/utils/compressImg\";\nimport { convertHEICToJPG, isHEICFile } from \"src/utils/handleHEIC\";\nimport ExistingImg from \"./ExistingImg\";\nimport NewImg from \"./NewImg\";\n\nexport interface ImgRevisionProps {\n  ogPicSrc: string;\n  isPicChanged: boolean;\n  handlePicChanged: () => void;\n}\n\nconst DiaryRevisionImgUpload = ({\n  ogPicSrc,\n  isPicChanged,\n  handlePicChanged,\n}: ImgRevisionProps) => {\n  const reader = new FileReader();\n  const imgRef = useRef<HTMLInputElement>(null);\n  const [diaryImg, setDiaryImg] = useRecoilState(diaryRevisionImgAtom);\n  const resetDiaryImg = useResetRecoilState(diaryRevisionImgAtom);\n  const [imgPreview, setImgPreview] = useState<string | ArrayBuffer | null>(\"\");\n  const saveImgFile = async () => {\n    if (imgRef?.current?.files) {\n      let file = imgRef.current.files[0];\n      if (isHEICFile(file)) file = await convertHEICToJPG(file);\n      const compressedImg = await compressImg(file);\n      if (compressedImg) file = compressedImg;\n      setDiaryImg(file);\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        setImgPreview(reader.result);\n      };\n    }\n  };\n  const deleteImgFile = () => {\n    if (typeof diaryImg === \"string\") URL.revokeObjectURL(diaryImg);\n    setDiaryImg(\"\");\n  };\n\n  useEffect(() => {\n    return () => {\n      resetDiaryImg();\n    };\n  }, []);\n\n  return (\n    <>\n      {isPicChanged ? (\n        <NewImg\n          imgRef={imgRef}\n          diaryImg={diaryImg}\n          imgPreview={imgPreview}\n          deleteImgFile={deleteImgFile}\n          saveImgFile={saveImgFile}\n        />\n      ) : (\n        <ExistingImg\n          imgRef={imgRef}\n          ogPicSrc={ogPicSrc}\n          saveImgFile={saveImgFile}\n          handlePicChanged={handlePicChanged}\n        />\n      )}\n    </>\n  );\n};\n\nexport default DiaryRevisionImgUpload;\n","import { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { DiaryInput, DiaryOgInput } from \"src/@types/input\";\nimport DiaryRevisionImgUpload from \"./DiaryRevisionImgUpload\";\nimport { diaryRevisionImgAtom } from \"src/recoil/diary-revision/atom\";\nimport { Img } from \"src/recoil/new-diary/atom\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport { api } from \"src/utils/axiosApi/api\";\nimport { formApi } from \"src/utils/axiosApi/formApi\";\nimport * as S from \"../../styles/Diary\";\n\nconst createFormData = (diaryImg: Img) => {\n  const formData = new FormData();\n  formData.append(\"picture\", diaryImg);\n\n  return formData;\n};\n\nconst DiaryRevisionForm = () => {\n  const navigate = useNavigate();\n  const params = useParams();\n  const bookId = String(params.bookId);\n  const diaryId = String(params.diaryId);\n  const diaryImg = useRecoilValue(diaryRevisionImgAtom);\n  const [isPicChanged, setIsPicChanged] = useState(false);\n  const [ogData, setOgData] = useState<DiaryOgInput | null>(null);\n  const { register, handleSubmit } = useForm<DiaryInput>({\n    defaultValues: async () => {\n      const { data } = await api.get(API_URL.bookDiary(Number(bookId)) + `/${diaryId}`);\n      const { title, picture, content } = data.data;\n      setOgData({ title, picture: picture, content });\n      return { title, content };\n    },\n  });\n\n  const onSubmitPicture = async () => {\n    if (diaryImg === \"\") return await api.delete(API_URL.diaryImg(diaryId));\n    await formApi.post(API_URL.diaryImg(diaryId), createFormData(diaryImg));\n  };\n  const onSubmitDiaryForm = async ({ title, content }: DiaryInput) => {\n    try {\n      await api.patch(API_URL.diary + `/${diaryId}`, { title, content });\n      if (isPicChanged) await onSubmitPicture();\n      navigate(-2);\n    } catch (err) {\n      if (err instanceof Error) alert(err.message);\n    }\n  };\n\n  return (\n    <S.DiaryForm id=\"diary\" onSubmit={handleSubmit(onSubmitDiaryForm)}>\n      <S.TitleInput\n        className={`${S.inputStyle}`}\n        placeholder=\"제목을 입력해주세요.\"\n        minLength={2}\n        maxLength={30}\n        required\n        {...register(\"title\")}\n      />\n      {ogData && (\n        <DiaryRevisionImgUpload\n          ogPicSrc={ogData.picture}\n          isPicChanged={isPicChanged}\n          handlePicChanged={() => {\n            setIsPicChanged(true);\n          }}\n        />\n      )}\n      <S.ContentInput\n        className={`${S.inputStyle}`}\n        placeholder=\"내용을 입력해주세요.\"\n        minLength={2}\n        maxLength={400}\n        required\n        {...register(\"content\")}\n      />\n    </S.DiaryForm>\n  );\n};\n\nexport default DiaryRevisionForm;\n","import DiaryRevisionForm from \"./DiaryRevisionForm\";\n\nexport default DiaryRevisionForm;\n","import { PinkPurpleBackground } from \"src/styles/Common\";\nimport { BackButton, PageTitle } from \"src/components/common\";\nimport { PostButton } from \"src/components/common/diary\";\nimport DiaryRevisionForm from \"src/components/diary-revision\";\n\nconst DiaryRevision = () => {\n  return (\n    <PinkPurpleBackground>\n      <BackButton />\n      <PostButton />\n      <PageTitle title=\"일기 수정\" />\n      <DiaryRevisionForm />\n    </PinkPurpleBackground>\n  );\n};\n\nexport default DiaryRevision;\n","import axios from \"axios\";\nimport { getAccessToken } from \"src/utils/token\";\nimport { defaultApi } from \"./defaultApi\";\n\nexport const formApi = axios.create({ ...defaultApi.defaults });\n\nformApi.interceptors.response = defaultApi.interceptors.response;\n\nformApi.interceptors.request.use(\n  (config) => {\n    config.headers[\"Content-Type\"] = \"multipart/form-data\";\n    config.headers[\"Authorization\"] = `Bearer ${getAccessToken()}`;\n    config.withCredentials = true;\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n","import imageCompression from \"browser-image-compression\";\n\nexport const compressImg = async (image: File) => {\n  const options = {\n    maxSizeMb: 1,\n    maxWidthOrHeight: 1000,\n  };\n  try {\n    const blob = await imageCompression(image, options);\n    return new File([blob], blob.name);\n  } catch (err) {\n    if (err instanceof Error) alert(err.message);\n  }\n};\n","export const isHEICFile = (file: File): boolean => {\n  return file.type === \"image/heic\" || file.type === \"image/HEIC\";\n};\n\nexport const convertHEICToJPG = async (file: File) => {\n  const heic2any = await import(\"heic2any\");\n  const jpgBlob = await heic2any.default({ blob: file, toType: \"image/jpeg\" });\n\n  return new File([jpgBlob as BlobPart], file.name.split(\".\")[0] + \".jpg\", {\n    type: \"image/jpeg\",\n  });\n};\n"],"names":["diaryRevisionImgAtom","atom","key","default","ogPicSrc","imgRef","saveImgFile","handlePicChanged","ogPic","className","alt","src","onClick","trashCanIcon","current","click","imgUploadIcon","type","accept","onChange","ref","diaryImg","imgPreview","deleteImgFile","id","isPicChanged","reader","FileReader","useRef","useRecoilState","setDiaryImg","resetDiaryImg","useResetRecoilState","useState","setImgPreview","files","file","isHEICFile","convertHEICToJPG","compressImg","compressedImg","readAsDataURL","onloadend","result","useEffect","URL","revokeObjectURL","createFormData","formData","FormData","append","navigate","useNavigate","params","useParams","bookId","String","diaryId","useRecoilValue","setIsPicChanged","ogData","setOgData","useForm","defaultValues","api","API_URL","Number","data","title","picture","content","register","handleSubmit","onSubmitPicture","formApi","onSubmitDiaryForm","Error","alert","message","onSubmit","S","placeholder","minLength","maxLength","required","axios","defaultApi","interceptors","response","request","use","config","headers","getAccessToken","withCredentials","error","Promise","reject","image","options","maxSizeMb","maxWidthOrHeight","imageCompression","blob","File","name","heic2any","toType","jpgBlob","split"],"sourceRoot":""}