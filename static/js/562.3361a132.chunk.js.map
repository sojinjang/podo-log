{"version":3,"file":"static/js/562.3361a132.chunk.js","mappings":"yTAqDA,UA/BgB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,IAAeC,EAAAA,GACrC,GAAmCC,EAAAA,EAAAA,IAAqB,CAAEC,KAAM,aAAxDC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAEZC,EAAc,yCAAG,0FAAiB,OAARC,EAAQ,EAARA,SAAQ,kBAE9BC,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,MAAe,CAAEC,MAAOX,EAAeQ,SAAAA,IAAY,KAAD,EACjEV,GAAU,GAAG,gDAEbc,MAAM,EAAD,IAAM,yDAEd,gBAPmB,sCAQpB,OACE,UAAC,IAAoB,YACnB,SAAC,IAAU,KACX,SAAC,IAAS,CAACC,MAAM,2CACjB,SAAC,IAAM,CAACC,SAAU,KAAK,UACrB,kBAAMC,SAAUT,EAAaC,GAAgB,WAC3C,SAAC,IAAS,KACV,SAAC,IAAc,UAAC,4CAChB,SAAC,IAAoB,KACrB,SAAC,IAAc,UAAC,qCAChB,SAAC,IAAuB,CAACF,SAAUA,EAAS,eAC5C,SAAC,IAAY,CAACW,YAAY,2BAAOC,aAAa,WAAWC,YAAY,mBAK/E,C","sources":["pages/NewBook.tsx"],"sourcesContent":["import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport Bounce from \"react-reveal/Bounce\";\n\nimport { api } from \"src/utils/axiosApi/api\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport { selectedColorAtom } from \"../recoil/book-color\";\nimport { PinkPurpleBackground } from \"src/components/common/Backgrounds\";\nimport BackButton from \"src/components/common/BackButton\";\nimport PageTitle from \"src/components/common/PageTitle\";\nimport DiaryIcon from \"src/components/new-book/BookIcon\";\nimport ColorSelectContainer from \"src/components/new-book/ColorSelectContainer\";\nimport ContainerTitle from \"src/components/new-book/ContainerTitle\";\nimport BookTitleInputContainer from \"src/components/new-book/BookTitleInputContainer\";\nimport PurpleButton from \"src/components/common/PurpleButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\ninterface NewBookName {\n  bookName: string;\n}\n\nconst NewBook = () => {\n  const navigate = useNavigate();\n  const selectedColor = useRecoilValue(selectedColorAtom);\n  const { register, handleSubmit } = useForm<NewBookName>({ mode: \"onSubmit\" });\n\n  const createNewDiary = async ({ bookName }: NewBookName) => {\n    try {\n      await api.post(API_URL.books, { color: selectedColor, bookName });\n      navigate(-1);\n    } catch (err) {\n      alert(err);\n    }\n  };\n  return (\n    <PinkPurpleBackground>\n      <BackButton />\n      <PageTitle title=\"일기장 만들기\" />\n      <Bounce duration={1500}>\n        <form onSubmit={handleSubmit(createNewDiary)}>\n          <DiaryIcon />\n          <ContainerTitle>표지 색상 선택</ContainerTitle>\n          <ColorSelectContainer />\n          <ContainerTitle>일기장 제목</ContainerTitle>\n          <BookTitleInputContainer register={register(\"bookName\")} />\n          <PurpleButton description=\"생성하기\" wrapperStyle=\"mt-[5vh]\" buttonStyle=\"sm:w-40\" />\n        </form>\n      </Bounce>\n    </PinkPurpleBackground>\n  );\n};\n\nexport default NewBook;\n"],"names":["navigate","useNavigate","selectedColor","useRecoilValue","selectedColorAtom","useForm","mode","register","handleSubmit","createNewDiary","bookName","api","API_URL","color","alert","title","duration","onSubmit","description","wrapperStyle","buttonStyle"],"sourceRoot":""}