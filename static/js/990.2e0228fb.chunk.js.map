{"version":3,"file":"static/js/990.2e0228fb.chunk.js","mappings":"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","sources":["components/common/ClickableContainer.tsx","components/common/PageTitle.tsx","components/common/UnclickableContainer.tsx","components/my-page/MyInfoSection.tsx","components/my-page/WithdrawalButton.tsx","components/my-page/SignOutButton.tsx","components/my-page/InviteCodeSection.tsx","pages/MyPage.tsx","utils/date.ts"],"sourcesContent":["import tw from \"tailwind-styled-components\";\n\nconst ClickableContainer = tw.div`\nfont-sans text-[1.7vh] bg-white/60 rounded-lg cursor-pointer\nshadow-lg hover:shadow-none ease-in duration-300\nmx-auto mb-[1.5vh] w-[90%] md:p-5 p-3\n`;\n\nexport default ClickableContainer;\n","import React from \"react\";\nimport tw from \"tailwind-styled-components\";\n\ninterface TitleProps {\n  readonly title: string;\n}\n\nconst Title = tw.div`\n  font-[jua] text-[2.7vh] m-auto pt-[1vh]\n`;\n\nconst PageTitle = ({ title }: TitleProps) => {\n  return (\n    <div className=\"flex h-[7.5vh]\">\n      <Title>{title}</Title>\n    </div>\n  );\n};\n\nexport default PageTitle;\n","import tw from \"tailwind-styled-components\";\n\nexport const UnclickableContainer = tw.div`\nrelative bg-white/60 rounded-lg shadow-lg\nmx-auto w-[90%] p-[3vh] overflow-hidden\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport tw from \"tailwind-styled-components\";\n\nimport { api } from \"src/utils/axiosApi/api\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport changeToKoreanDate from \"src/utils/date\";\nimport defaultProfileImg from \"../../assets/icons/default_profile.png\";\nimport { UnclickableContainer } from \"../common/UnclickableContainer\";\n\ninterface UserData {\n  nickname: string;\n  profile: string;\n  provider: \"podo\" | \"kakao\" | \"naver\";\n  createdAt: Date;\n}\n\nexport const MyInfoSection = () => {\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const [profileImg, setProfileImg] = useState<string>(\"\");\n\n  const getUserData = async () => {\n    try {\n      const { data } = await api.get(API_URL.users);\n      setUserData(data.data);\n    } catch (err) {\n      if (err instanceof Error) alert(err.message);\n    }\n  };\n\n  const onClickEditInfo = () => {\n    navigate(\"edit\", { state: { myInfo: userData } });\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  useEffect(() => {\n    setProfileImg(userData?.profile === \"없음\" ? defaultProfileImg : userData?.profile);\n  }, [userData]);\n\n  return (\n    <>\n      {userData && (\n        <UnclickableContainer className=\"mt-[2vh] p-[2vh]\">\n          <div className=\"flex\">\n            <ProfileImg alt=\"profile\" src={profileImg} />\n            <InfoContainer>\n              <InfoLine>\n                <InfoTitle>닉네임</InfoTitle>\n                <Info>{userData.nickname}</Info>\n              </InfoLine>\n              <InfoLine>\n                <InfoTitle>가입 경로</InfoTitle>\n                <Info>{userData.provider}</Info>\n              </InfoLine>\n              <InfoLine>\n                <InfoTitle>가입일</InfoTitle>\n                <Info>{changeToKoreanDate(userData.createdAt)}</Info>\n              </InfoLine>\n            </InfoContainer>\n            <div className=\"inline-block\">\n              <EditButton onClick={onClickEditInfo}>정보 수정</EditButton>\n            </div>\n          </div>\n        </UnclickableContainer>\n      )}\n    </>\n  );\n};\n\nconst ProfileImg = tw.img`\nw-[8vh] h-[8vh]\nrounded-full object-cover shadow-lg mx-[1vh]\n`;\n\nconst InfoContainer = tw.div`\nflex flex-col ml-[1vh] my-auto mr-auto\n`;\n\nconst InfoLine = tw.div`\nflex w-[25vh]\n`;\n\nconst InfoTitle = tw.p`\nfont-sans text-[1.5vh] text-[#959595] font-medium w-[7vh]\n`;\n\nconst Info = tw.p`\nfont-sans text-[1.5vh]\n`;\n\nconst EditButton = tw.p`\nfont-sans text-[1.5vh] text-[#959595] font-medium cursor-pointer\ndrop-shadow-lg hover:drop-shadow-none transition ease-in duration-300\n`;\n","import React from \"react\";\nimport tw from \"tailwind-styled-components\";\n\nimport { api } from \"src/utils/axiosApi/api\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport { accessTokenAtom } from \"src/recoil/token\";\nimport { useSetRecoilState } from \"recoil\";\n\nconst WithdrawalButton = () => {\n  const setAccessToken = useSetRecoilState(accessTokenAtom);\n\n  const handleWithdrawal = async () => {\n    if (!confirm(\"정말 탈퇴하시겠습니까? 🥺\")) return;\n    try {\n      await api.patch(API_URL.withdrawal, {});\n      setAccessToken(undefined);\n    } catch (err) {\n      if (err instanceof Error) alert(err.message);\n    }\n  };\n\n  return <Button onClick={handleWithdrawal}>탈퇴하기</Button>;\n};\n\nexport default WithdrawalButton;\n\nconst Button = tw.p`\nfont-sans text-[#959595] text-[1.7vh] mx-auto cursor-pointer\ndrop-shadow-lg hover:drop-shadow-none transition ease-in duration-300\n`;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { accessTokenAtom } from \"src/recoil/token\";\nimport { api } from \"src/utils/axiosApi/api\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport ClickableContainer from \"src/components/common/ClickableContainer\";\n\nconst SignOutButton = () => {\n  const setAccessToken = useSetRecoilState(accessTokenAtom);\n\n  const handleSignOut = async () => {\n    try {\n      await api.post(API_URL.signOut, {});\n      setAccessToken(undefined);\n    } catch (err) {\n      if (err instanceof Error) alert(err.message);\n    }\n  };\n\n  return <ClickableContainer onClick={handleSignOut}>로그아웃</ClickableContainer>;\n};\n\nexport default SignOutButton;\n","import React from \"react\";\nimport tw from \"tailwind-styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { api } from \"src/utils/axiosApi/api\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport { PRIVATE_ROUTE } from \"src/router/ROUTE_INFO\";\n\ninterface InviteCodeInput {\n  readonly invttCode: string;\n}\n\nexport const InviteCodeSection = () => {\n  const navigate = useNavigate();\n  const { register, handleSubmit } = useForm<InviteCodeInput>({ mode: \"onSubmit\" });\n  const onSubmitCode = async ({ invttCode }: InviteCodeInput) => {\n    try {\n      await api.post(API_URL.inviteCodeInput, { invttCode });\n      navigate(PRIVATE_ROUTE.books.path);\n    } catch (err) {\n      if (err instanceof Error) alert(err.message);\n    }\n  };\n\n  return (\n    <form className=\"w-[90%] mx-auto my-[1.5vh]\" onSubmit={handleSubmit(onSubmitCode)}>\n      <CodeSectionTitle>초대코드 입력</CodeSectionTitle>\n      <CodeInputContainer className=\"flex\">\n        <input\n          className=\"bg-transparent w-[80%]\"\n          placeholder=\"초대 코드를 입력하세요.\"\n          minLength={8}\n          maxLength={8}\n          required\n          {...register(\"invttCode\")}\n        />\n        <PostButton>등록</PostButton>\n      </CodeInputContainer>\n    </form>\n  );\n};\n\nconst CodeSectionTitle = tw.p`\nfont-sans text-[1.5vh] text-[#959595]\n`;\n\nconst CodeInputContainer = tw.div`\nfont-sans text-[1.5vh] bg-white/60 rounded-lg shadow-lg\nmx-auto md:p-5 p-3\n`;\n\nconst PostButton = tw.button` \nfont-sans w-[10%] ml-auto cursor-pointer text-center\ntext-purple-1000 hover:opacity-50 ease-in duration-300\n`;\n","import React from \"react\";\nimport Fade from \"react-reveal/Fade\";\n\nimport { PinkPurpleBackground } from \"src/components/common/Backgrounds\";\nimport { Navbar } from \"src/components/common/NavBar\";\nimport PageTitle from \"src/components/common/PageTitle\";\nimport { MyInfoSection } from \"src/components/my-page/MyInfoSection\";\nimport WithdrawalButton from \"src/components/my-page/WithdrawalButton\";\nimport SignOutButton from \"../components/my-page/SignOutButton\";\nimport { InviteCodeSection } from \"../components/my-page/InviteCodeSection\";\n\nconst MyPage = () => {\n  return (\n    <PinkPurpleBackground>\n      <PageTitle title=\"마이 페이지\" />\n      <Fade top>\n        <div className=\"flex flex-col\">\n          <MyInfoSection />\n          <InviteCodeSection />\n          <SignOutButton />\n          <WithdrawalButton />\n        </div>\n      </Fade>\n      <Navbar activeMenu=\"myPage\" />\n    </PinkPurpleBackground>\n  );\n};\n\nexport default MyPage;\n","function changeToKoreanDate(timestamp: Date | string) {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n  const day = (\"0\" + date.getDate()).slice(-2);\n  const dateStr = year + \".\" + month + \".\" + day;\n\n  return dateStr;\n}\n\nexport default changeToKoreanDate;\n"],"names":["ClickableContainer","tw","Title","title","className","UnclickableContainer","MyInfoSection","navigate","useNavigate","useState","userData","setUserData","profileImg","setProfileImg","getUserData","api","API_URL","data","Error","alert","message","useEffect","profile","defaultProfileImg","ProfileImg","alt","src","InfoContainer","InfoLine","InfoTitle","Info","nickname","provider","changeToKoreanDate","createdAt","EditButton","onClick","state","myInfo","setAccessToken","useSetRecoilState","accessTokenAtom","handleWithdrawal","confirm","undefined","Button","handleSignOut","InviteCodeSection","useForm","mode","register","handleSubmit","onSubmitCode","invttCode","PRIVATE_ROUTE","onSubmit","CodeSectionTitle","CodeInputContainer","placeholder","minLength","maxLength","required","PostButton","PageTitle","top","activeMenu","timestamp","date","Date","getFullYear","getMonth","slice","getDate"],"sourceRoot":""}