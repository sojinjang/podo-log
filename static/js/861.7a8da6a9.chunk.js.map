{"version":3,"file":"static/js/861.7a8da6a9.chunk.js","mappings":"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","sources":["styles/DiaryList.tsx","components/diary-list/BookName.tsx","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","components/diary-list/DiaryContainer.tsx","components/diary-list/DiaryListContainer.tsx","../node_modules/src/useInView.tsx","components/diary-list/NewDiaryButton.tsx","components/diary-list/SettingButton.tsx","pages/DiaryList.tsx","../node_modules/react-reveal/Fade.js"],"sourcesContent":["import tw from \"tailwind-styled-components\";\n\nexport const NumMember = tw.div`\nfont-[jua] text-gray-1000 text-[3vh] md:text-[2.7vh] mx-3 my-auto pt-[1.2vh]\n`;\n\nexport const ContainerStyle = `\ncursor-pointer mb-[2vh]\nhover:shadow-none ease-in duration-200\n`;\n\nexport const CommentContainer = tw.div`\nflex justify-end \n`;\n\nexport const CommentIcon = tw.picture`\nw-[2.5vh] h-[2.5vh] my-auto\n`;\n\nexport const NumComments = tw.p`\ntext-[2.2vh] md:text-[2vh] ml-1 my-auto\n`;\n\nexport const ButtonContainer = tw.div`\nflex justify-center w-[90%] h-[8%] mx-auto my-[2vh]\nbg-white/60 rounded-lg \nhover:border-dashed hover:border-black/80 hover:border-[2.5px]\nshadow-lg hover:shadow-none ease-in duration-200\n`;\n\nexport const PencilIcon = tw.img`\nh-[2.64vh] my-auto mr-[1vw] md:mr-[0.5vw]\n`;\n\nexport const ButtonDescription = tw.p`\ntext-[2.2vh] md:text-[2vh] my-auto\n`;\n\nexport const SettingButtonImg = tw.img`\n  h-[4.5vh] absolute top-[2vh] right-[1.4vh] cursor-pointer\n`;\n","import { useLocation } from \"react-router-dom\";\n\nimport PageTitle from \"../common/PageTitle\";\nimport * as S from \"../../styles/DiaryList\";\n\nconst BookName = () => {\n  const location = useLocation();\n  const bookName = location.state.name;\n  const numMembers = location.state.numMembers;\n\n  return (\n    <div className=\"flex justify-center\">\n      <PageTitle title={bookName} />\n      <S.NumMember>{numMembers}</S.NumMember>\n    </div>\n  );\n};\n\nexport default BookName;\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Fade from \"react-reveal/Fade\";\n\nimport { AffixedStickerInfo, Diary } from \"src/@types/response\";\nimport { PRIVATE_ROUTE } from \"src/router/ROUTE_INFO\";\nimport commentWebP from \"src/assets/icons/comment.webp\";\nimport commentPng from \"src/assets/icons/comment.png\";\nimport { MoveableSticker, DiarySection } from \"src/components/common/diary\";\nimport * as G from \"src/styles/Common\";\nimport * as S from \"src/styles/DiaryList\";\n\ninterface DiaryContainerProps {\n  viewRef?: () => void;\n  data: Diary;\n}\n\nconst DiaryContainer = ({ viewRef, data }: DiaryContainerProps) => {\n  const navigate = useNavigate();\n  const onClickDiary = () => {\n    navigate(`${PRIVATE_ROUTE.books.path}/${data.bookId}/${data.diaryId}`, {\n      state: {\n        diaryInfo: data,\n      },\n    });\n  };\n\n  const [stickers, setStickers] = useState<AffixedStickerInfo[]>([]);\n  const handleUpdateStickers = (newSticker: AffixedStickerInfo) => {\n    setStickers((curStickers) => {\n      return [\n        ...curStickers.filter(\n          (sticker) => sticker.stickedStickerId !== newSticker.stickedStickerId\n        ),\n        newSticker,\n      ];\n    });\n  };\n  useEffect(() => {\n    if (data.stickers) setStickers(data.stickers);\n  }, []);\n\n  return (\n    <Fade bottom duration={1000}>\n      <G.UnclickableContainer\n        className={S.ContainerStyle}\n        onClick={onClickDiary}\n        ref={viewRef}\n      >\n        {stickers.map((sticker) => {\n          return (\n            <MoveableSticker\n              key={sticker.stickedStickerId}\n              sticker={sticker}\n              handleUpdateStickers={handleUpdateStickers}\n            />\n          );\n        })}\n        <DiarySection data={data} isDetailPage={false} />\n        <S.CommentContainer>\n          <S.CommentIcon>\n            <source srcSet={commentWebP} type=\"image/webp\" />\n            <img alt=\"comment\" src={commentPng} />\n          </S.CommentIcon>\n          <S.NumComments>{data.numComments}</S.NumComments>\n        </S.CommentContainer>\n      </G.UnclickableContainer>\n    </Fade>\n  );\n};\n\nexport default DiaryContainer;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useInView } from \"react-intersection-observer\";\n\nimport { Diary } from \"src/@types/response\";\nimport { api } from \"src/utils/axiosApi/api\";\nimport { API_URL } from \"src/constants/API_URL\";\nimport DiaryContainer from \"./DiaryContainer\";\n\nconst DiaryListContainer = () => {\n  const LIMIT = 5;\n  const params = useParams();\n  const bookId = Number(params.bookId);\n\n  const [ref, inView] = useInView();\n  const [diaries, setDiaries] = useState<Diary[]>([]);\n  const [startIdx, setStartIdx] = useState<number>(1);\n  const [hasNextPage, setHasNextPage] = useState<boolean>(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getDiaryList = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const { data } = await api.get(API_URL.diaryList(bookId, LIMIT, startIdx));\n      const diaryList = data.data;\n      if (startIdx === 1) {\n        const uniqueDiaries = [...diaries, ...diaryList].filter(\n          (item, index, array) => array.findIndex((t) => t.diaryId === item.diaryId) === index\n        );\n        setDiaries(uniqueDiaries);\n      } else {\n        setDiaries((prevDiaries) => [...prevDiaries, ...diaryList]);\n      }\n      setIsLoading(false);\n      if (diaryList.length < LIMIT) setHasNextPage(false);\n    } catch (err) {\n      if (err instanceof Error) alert(err.message);\n    }\n  }, [startIdx]);\n\n  const handleStartIdx = () => {\n    if (inView && !isLoading && hasNextPage) {\n      setStartIdx((prevState) => prevState + LIMIT);\n    }\n  };\n\n  useEffect(() => {\n    getDiaryList();\n  }, [getDiaryList]);\n  useEffect(() => {\n    handleStartIdx();\n  }, [inView, isLoading]);\n\n  return (\n    <div>\n      {diaries.map((diary, idx) => {\n        return (\n          <React.Fragment key={idx}>\n            {diaries.length - 1 === idx ? (\n              <DiaryContainer viewRef={ref} data={diary}></DiaryContainer>\n            ) : (\n              <DiaryContainer data={diary}></DiaryContainer>\n            )}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DiaryListContainer;\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n\n  React.useEffect(() => {\n    if (!ref && entryTarget && !triggerOnce && !skip) {\n      // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n        entry: undefined,\n      });\n    }\n  }, [ref, entryTarget, triggerOnce, skip, initialInView]);\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import { Link } from \"react-router-dom\";\n\nimport { PRIVATE_ROUTE } from \"src/router/ROUTE_INFO\";\nimport pencilImg from \"../../assets/icons/pencil.png\";\nimport * as S from \"../../styles/DiaryList\";\n\nconst NewDiaryButton = () => {\n  return (\n    <Link to={PRIVATE_ROUTE.newDiary.path.split(\"/\").reverse()[0]}>\n      <S.ButtonContainer>\n        <S.PencilIcon alt=\"write\" src={pencilImg} />\n        <S.ButtonDescription>일기 쓰기</S.ButtonDescription>\n      </S.ButtonContainer>\n    </Link>\n  );\n};\n\nexport default NewDiaryButton;\n","import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nimport settingWebP from \"../../assets/icons/setting.webp\";\nimport settingPng from \"../../assets/icons/setting.png\";\nimport { PRIVATE_ROUTE } from \"src/router/ROUTE_INFO\";\nimport * as S from \"../../styles/DiaryList\";\n\nconst SettingButton = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const onClickSetting = () => {\n    navigate(PRIVATE_ROUTE.bookSetting.path.split(\"/\").reverse()[0], {\n      state: {\n        name: location.state.name,\n        color: location.state.color,\n      },\n    });\n  };\n\n  return (\n    <div onClick={onClickSetting} className=\"relative\">\n      <picture>\n        <source srcSet={settingWebP} type=\"image/webp\" />\n        <S.SettingButtonImg alt=\"setting\" src={settingPng} />\n      </picture>\n    </div>\n  );\n};\n\nexport default SettingButton;\n","import { PinkPurpleBackground } from \"src/styles/Common\";\nimport { BackButton } from \"src/components/common\";\nimport {\n  BookName,\n  DiaryListContainer,\n  NewDiaryButton,\n  SettingButton,\n} from \"src/components/diary-list\";\n\nconst DiaryList = () => {\n  return (\n    <PinkPurpleBackground className=\"overflow-y-scroll\">\n      <BackButton />\n      <SettingButton />\n      <BookName />\n      <NewDiaryButton />\n      <DiaryListContainer />\n    </PinkPurpleBackground>\n  );\n};\n\nexport default DiaryList;\n","\"use strict\";function _interopRequireDefault(o){return o&&o.__esModule?o:{default:o}}function _objectWithoutProperties(o,e){var r={};for(var t in o)e.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(o,t)&&(r[t]=o[t]);return r}function make(o,e){var r=e.distance,t=e.left,p=e.right,a=e.up,l=e.down,i=e.top,u=e.bottom,n=e.big,s=e.mirror,d=e.opposite,_=(r?r.toString():0)+((t?1:0)|(p?2:0)|(i||l?4:0)|(u||a?8:0)|(s?16:0)|(d?32:0)|(o?64:0)|(n?128:0));if(lookup.hasOwnProperty(_))return lookup[_];var f=t||p||a||l||i||u,y=void 0,b=void 0;if(f){if(!s!=!(o&&d)){var v=[p,t,u,i,l,a];t=v[0],p=v[1],i=v[2],u=v[3],a=v[4],l=v[5]}var c=r||(n?\"2000px\":\"100%\");y=t?\"-\"+c:p?c:\"0\",b=l||i?\"-\"+c:a||u?c:\"0\"}return lookup[_]=(0,_globals.animation)((o?\"to\":\"from\")+\" {opacity: 0;\"+(f?\" transform: translate3d(\"+y+\", \"+b+\", 0);\":\"\")+\"}\\n     \"+(o?\"from\":\"to\")+\" {opacity: 1;transform: none;} \"),lookup[_]}function Fade(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_globals.defaults,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=o.children,t=(o.out,o.forever),p=o.timeout,a=o.duration,l=void 0===a?_globals.defaults.duration:a,i=o.delay,u=void 0===i?_globals.defaults.delay:i,n=o.count,s=void 0===n?_globals.defaults.count:n,d=_objectWithoutProperties(o,[\"children\",\"out\",\"forever\",\"timeout\",\"duration\",\"delay\",\"count\"]),_={make:make,duration:void 0===p?l:p,delay:u,forever:t,count:s,style:{animationFillMode:\"both\"},reverse:d.left};return e?(0,_wrap2.default)(d,_,_,r):_}Object.defineProperty(exports,\"__esModule\",{value:!0});var _propTypes=require(\"prop-types\"),_globals=require(\"./globals\"),_wrap=require(\"./wrap\"),_wrap2=_interopRequireDefault(_wrap),propTypes={out:_propTypes.bool,left:_propTypes.bool,right:_propTypes.bool,top:_propTypes.bool,bottom:_propTypes.bool,big:_propTypes.bool,mirror:_propTypes.bool,opposite:_propTypes.bool,duration:_propTypes.number,timeout:_propTypes.number,distance:_propTypes.string,delay:_propTypes.number,count:_propTypes.number,forever:_propTypes.bool},lookup={};Fade.propTypes=propTypes,exports.default=Fade,module.exports=exports.default;"],"names":["NumMember","tw","CommentContainer","CommentIcon","NumComments","ButtonContainer","PencilIcon","ButtonDescription","SettingButtonImg","location","useLocation","bookName","state","name","numMembers","className","PageTitle","title","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","createObserver","id","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","target","callback","Array","isArray","observe","element","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","isPlainChildren","props","children","React","viewRef","data","navigate","useNavigate","useState","stickers","setStickers","handleUpdateStickers","newSticker","curStickers","sticker","stickedStickerId","useEffect","bottom","duration","onClick","PRIVATE_ROUTE","bookId","diaryId","diaryInfo","ref","isDetailPage","srcSet","commentWebP","type","alt","src","commentPng","numComments","params","useParams","Number","delay","rootMargin","triggerOnce","skip","initialInView","onChange","setRef","setState","current","entryTarget","_state$entry","result","useInView","diaries","setDiaries","startIdx","setStartIdx","hasNextPage","setHasNextPage","isLoading","setIsLoading","getDiaryList","useCallback","api","API_URL","diaryList","uniqueDiaries","item","index","array","findIndex","t","prevDiaries","Error","alert","message","prevState","diary","idx","to","reverse","pencilImg","color","settingWebP","settingPng","_objectWithoutProperties","o","e","r","prototype","hasOwnProperty","call","make","distance","left","p","right","a","up","l","down","i","top","u","n","big","s","mirror","d","opposite","_","lookup","f","y","b","v","c","_globals","animation","Fade","arguments","defaults","out","forever","timeout","count","style","animationFillMode","_wrap2","default","defineProperty","exports","value","_propTypes","require","_wrap","__esModule","propTypes","bool","number","string","module"],"sourceRoot":""}